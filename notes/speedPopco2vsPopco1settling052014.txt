TIME TRIALS WITH NEURALNET-UPDATING ONLY, i.e. NO COMMUNICATION, MID MAY 2014

I fixed some bugs in popco2 since the April trials, so I'm redoing
the popco2 trials.  The popco1 data below was copied from the April
speed notes file.


===================================================
SUMMARY ON MY MBP

popco2 is slightly more than 10X faster than popco1 with no parallelism
in Clojure (i.e. map rather than pmap) for 1000 ticks, 99 persons, no
communication.  More precisely, the ratio between the popco1 time and
the popco2 criterium average was about 10.2134.

With pmap, popco2 is close to 2X faster than without it (with this
simulation, on the MBP).  

(Note that I only ran popco1 one time, so it's possible that this was
a little bit of an outlier, but SBCL times should be more reliable
than Clojure-without-Criterium.)

Summary:

ratio between (with upper/left):

 	popco1		map		pmap

popco1			0.1001		0.0546

map	 9.9896				0.5449

pmap	18.3310		1.8350

===================================================
POPCO 1 ON MBP:

5/13/2014 with crime/crime3example99.lisp in master branch, results
from 10 trials:

33 both-biasers job, 33 virus-biasers jov, and 33 beast-biaser job:
Using the master-numbers git branch, with max, min activation at 0.99,
-0.99.

1153.538910 seconds of total run time (1146.088979 user, 7.449931 system)
1152.336889 seconds of total run time (1144.923266 user, 7.413623 system)
1153.485681 seconds of total run time (1145.981973 user, 7.503708 system)
1160.166090 seconds of total run time (1152.713173 user, 7.452917 system)
1152.820598 seconds of total run time (1145.331846 user, 7.488752 system)
1153.066353 seconds of total run time (1145.539320 user, 7.527033 system)
1144.543700 seconds of total run time (1138.012924 user, 6.530776 system)
1145.645193 seconds of total run time (1139.111524 user, 6.533669 system)
1158.882110 seconds of total run time (1151.413136 user, 7.468974 system)
1143.904976 seconds of total run time (1137.338839 user, 6.566137 system)

Average of the 10 trials: 1151.83905 seconds (of total run time)
i.e. 19.1973175 minutes

........

5/12/2014 with crime/crime3example99.lisp in extremal-numbers branch,
one trial:

33 both-biasers job, 33 virus-biasers jov, and 33 beast-biaser job:
Using the extremal-numbers git branch: i.e. just like the standard
version, but putting max, min activation at 1.0, -1.0, rather than
0.99, -0.99.

Running popco with maximum of 5 cycles each in 1000 popco tick(s) ....
*do-converse* NIL; *do-update-propn-nets-from-analogy-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* NIL; *use-new-random-state* T
1000
Evaluation took:
  1180.224 seconds of real time
  1177.649528 seconds of total run time (1168.861966 user, 8.787562 system)
  [ Run times consist of 64.022 seconds GC time, and 1113.628 seconds non-GC time. ]
  99.78% CPU
  2,714,579,249,652 processor cycles
  5 page faults
  526,989,881,968 bytes consed

[That's 19.62749213 minutes.]

[SBCL didn't go above 200MB, I think.]

[Interestingly(?), this is a little faster than the last time I did a
similar time test, using the 0.99, -0.99 max/min values.  Then the time
was 1209.760389 seconds, or more than 20 mins.]

===================================================
POPCO 2 ON MBP:

git hist id 9cad085
Clojure 1.6.0
java version "1.6.0_65"
Java(TM) SE Runtime Environment (build 1.6.0_65-b14-462-10M4609)
Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-462, mixed mode)
2GB max heap
(But java only went up to 441.8MB, because I just used nth instead
of trying to collect the entire sequence (which is appropriate for
comparison with popco1).)

SINGLE-THREADED:

The code that I ran:

(use '[criterium.core :only [bench]])
(use 'sims.crime3.example99)
(bench (def _ (nth (unparalleled-many-times popn) 1000)))
[NOTE this uses map rather than pmap]

Criterium's output:

WARNING: Final GC required 4.790693885765076 % of runtime
Evaluation count : 60 in 60 samples of 1 calls.
             Execution time mean : 1.921737 min
    Execution time std-deviation : 753.913115 ms
   Execution time lower quantile : 1.915311 min ( 2.5%)
   Execution time upper quantile : 1.955896 min (97.5%)
                   Overhead used : 2.412322 ns

Found 7 outliers in 60 samples (11.6667 %)
	low-severe	 7 (11.6667 %)
 Variance from outliers : 1.6389 % Variance is slightly inflated by outliers

MULTI-THREADED:

The code that I ran:

(use '[criterium.core :only [bench]])
(use 'sims.crime3.example99)
(time (bench (def _ (nth (many-times popn) 1000))))

Criterium's output:

WARNING: Final GC required 4.838320105087719 % of runtime
Evaluation count : 60 in 60 samples of 1 calls.
             Execution time mean : 1.047259 min
    Execution time std-deviation : 2.353198 sec
   Execution time lower quantile : 1.005404 min ( 2.5%)
   Execution time upper quantile : 1.105262 min (97.5%)
                   Overhead used : 2.426912 ns

time's output:
"Elapsed time: 4460354.172 msecs"


