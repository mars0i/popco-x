TIME TRIALS WITH NET UPDATES ONLY, NO COMMUNICATION, MID MAY 2014

I fixed some bugs in popco2 since the April trials, so I'm redoing
the popco2 trials.  The popco1 data below was copied from the April
speed notes file.


===================================================
SUMMARY ON MY MBP


===================================================
POPCO 1 ON MBP:

4/25/2014 with crime/crime3example99.lisp
33 both-biasers job, 33 virus-biasers jov, and 33 beast-biaser job:

* (time (popco*))
[popco* was a short-lived function--I deleted it--that, under the
right circumstances, would run popco without writing a random state file.]

Running popco with maximum of 5 cycles each in 1000 popco tick(s) ....
*do-converse* NIL; *do-update-propn-nets-from-analogy-nets* T; *do-report-to-netlogo* NIL; *do-report-propns-to-csv* NIL; *use-new-random-state* T
1000
Evaluation took:
  1212.021 seconds of real time
  1209.760389 seconds of total run time (1200.559819 user, 9.200570 system)
  [ Run times consist of 70.328 seconds GC time, and 1139.433 seconds non-GC time. ]
  99.81% CPU
  2,787,712,278,274 processor cycles
  1 page fault
  526,989,941,696 bytes consed

NOTE: 1209.760389 seconds is 20.16267315 minutes.

===================================================
POPCO 2 ON MBP:

git hist id 9cad085
Clojure 1.6.0
java version "1.6.0_65"
Java(TM) SE Runtime Environment (build 1.6.0_65-b14-462-10M4609)
Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-462, mixed mode)
2GB max heap
(But java only went up to 441.8MB, because I just used nth instead
of trying to collect the entire sequence (which is appropriate for
comparison with popco1).)

The code run:

(use '[criterium.core :only [bench]])
(use 'sims.crime3.example99)
(bench (def _ (nth (unparalleled-many-times popn) 1000)))
[NOTE this uses map rather than pmap]

Criterium's output:

WARNING: Final GC required 4.790693885765076 % of runtime
Evaluation count : 60 in 60 samples of 1 calls.
             Execution time mean : 1.921737 min
    Execution time std-deviation : 753.913115 ms
   Execution time lower quantile : 1.915311 min ( 2.5%)
   Execution time upper quantile : 1.955896 min (97.5%)
                   Overhead used : 2.412322 ns

Found 7 outliers in 60 samples (11.6667 %)
	low-severe	 7 (11.6667 %)
 Variance from outliers : 1.6389 % Variance is slightly inflated by outliers
